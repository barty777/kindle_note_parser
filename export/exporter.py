import os


class Export:
    def export(self, books, folder_path):
        """
        Exports data collected from kindle file to the wanted format
        :param folder_path: File where the document will be exported
        :param books: List of books generated by the raw_parser.py
        :return:
        """
        raise NotImplementedError


class ExportTex(Export):
    """
    Exports to .tex file (Latex)
    """

    def __init__(self, template_path, author_name):
        """
        Creates list of lines from the template file
        :param template_path: Path to the .tex template file
        :param author_name: Name of the author which will be written on the document (NOT NAME OF THE BOOK'S AUTHOR)
        """
        with open(template_path, 'r') as file:
            self.template = file.readlines()
            self.author = author_name

    def export(self, book, folder_path):

        with open(os.path.join(folder_path, book.book_name + ".tex"), "w") as file:

            for index, template in enumerate(self.template):
                if "book_title" in template:
                    # Replace book title
                    template = template.replace("book_title", book.book_name)
                    file.write(template)

                elif "author_name" in template:
                    template = template.replace("author_name", self.author)
                    file.write(template)

                elif template.startswith("#"):
                    # Insert content

                    file.write("\\begin{itemize}\n")

                    for highlight in book.highlights_list:
                        print(highlight.content)
                        file.write("\\item {" + str(highlight.content) + "}\n")

                    file.write("\\end{itemize}\n")

                else:
                    file.write(template)
